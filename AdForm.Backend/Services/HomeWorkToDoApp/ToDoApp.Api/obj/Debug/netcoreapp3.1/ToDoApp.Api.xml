<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ToDoApp.Api</name>
    </assembly>
    <members>
        <member name="T:ToDoApp.Api.AuthorizeAttribute">
            <summary>
            Authorization attribute.
            </summary>
        </member>
        <member name="M:ToDoApp.Api.AuthorizeAttribute.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            Handle onauthorization.
            </summary>
            <param name="context">Authorization filter context.</param>
        </member>
        <member name="M:ToDoApp.Api.Controllers.V1.ItemController.#ctor(ToDoApp.Business.IToDoItemAppService)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="toDoItemAppService"></param>
        </member>
        <member name="M:ToDoApp.Api.Controllers.V1.ItemController.Get(ToDoApp.Business.PaginationParameters)">
            <summary>
            Get All Item with paging
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Controllers.V1.ItemController.GetItem(System.Int64)">
            <summary>
            Get item by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Controllers.V1.ItemController.Post(ToDoApp.Business.ToDoItemRequestDto,FluentValidation.IValidator{ToDoApp.Business.ToDoItemRequestDto})">
            <summary>
            Create Item
            </summary>
            <param name="request"></param>
            <param name="validator"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Controllers.V1.ItemController.Put(ToDoApp.Business.ToDoItemRequestDto,System.Int64,FluentValidation.IValidator{ToDoApp.Business.ToDoItemRequestDto})">
            <summary>
            Update item 
            </summary>
            <param name="request"></param>
            <param name="id"></param>
            <param name="validator"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Controllers.V1.ItemController.Patch(Microsoft.AspNetCore.JsonPatch.JsonPatchDocument,System.Int64)">
            <summary>
            Partially update item
            </summary>
            <param name="request"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Controllers.V1.ItemController.Delete(System.Int64)">
            <summary>
            Delete item
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Controllers.V1.LabelController.Get">
            <summary>
            Get all label
            </summary>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Controllers.V1.LabelController.GetLabel(System.Int64)">
            <summary>
            Get label by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Controllers.V1.LabelController.Post(ToDoApp.Business.LabelRequestDto,FluentValidation.IValidator{ToDoApp.Business.LabelRequestDto})">
            <summary>
            Craete label
            </summary>
            <param name="request"></param>
            <param name="validator"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Controllers.V1.LabelController.Delete(System.Int64)">
            <summary>
            Delete label
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Controllers.V1.LabelController.AssignLabelToList(ToDoApp.Business.AssignLabelRequestDto,System.Int64,ToDoApp.Business.IToDoListAppService)">
            <summary>
            Assign label to list
            </summary>
            <param name="request"></param>
            <param name="id"></param>
            <param name="toDoListAppService"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Controllers.V1.LabelController.AssignLabelToItem(ToDoApp.Business.AssignLabelRequestDto,System.Int64,ToDoApp.Business.IToDoItemAppService)">
            <summary>
            Assign label to item
            </summary>
            <param name="request"></param>
            <param name="id"></param>
            <param name="toDoItemAppService"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Controllers.V1.ListController.Get(ToDoApp.Business.PaginationParameters)">
            <summary>
            get list with paging and searching
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Controllers.V1.ListController.GetList(System.Int64)">
            <summary>
            get list by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Controllers.V1.ListController.Post(ToDoApp.Business.ToDoListRequestDto,FluentValidation.IValidator{ToDoApp.Business.ToDoListRequestDto})">
            <summary>
            Create List
            </summary>
            <param name="request"></param>
            <param name="validator"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Controllers.V1.ListController.Put(ToDoApp.Business.ToDoListRequestDto,System.Int64,FluentValidation.IValidator{ToDoApp.Business.ToDoListRequestDto})">
            <summary>
            Update list
            </summary>
            <param name="request"></param>
            <param name="id"></param>
            <param name="validator"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Controllers.V1.ListController.Delete(System.Int64)">
            <summary>
            Delete list
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Controllers.V1.ListController.Patch(Microsoft.AspNetCore.JsonPatch.JsonPatchDocument,System.Int64)">
            <summary>
            update list partially
            </summary>
            <param name="request"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:ToDoApp.Api.LabelType">
            <summary>
            Label type mapped to LabelDto types for GraphQl.
            </summary>
        </member>
        <member name="T:ToDoApp.Api.ListsType">
            <summary>
            Lists type mapped to ListDto types for GraphQl.
            </summary>
        </member>
        <member name="T:ToDoApp.Api.Mutation">
            <summary>
            Mutation class for GraphQl.
            </summary>
        </member>
        <member name="M:ToDoApp.Api.Mutation.#ctor(ToDoApp.Business.ILableAppService,ToDoApp.Business.IToDoItemAppService,ToDoApp.Business.IToDoListAppService)">
            <summary>
            Create new instance of <see cref="T:ToDoApp.Api.Mutation"/> class.
            </summary>
            <param name="lableAppService"> Label Service</param>
            <param name="toDoItemAppService"> ToDoItem Service</param>
            <param name="toDoListAppService">List service</param>
            <param name="mapper">Auto mapper</param>
        </member>
        <member name="M:ToDoApp.Api.Mutation.AddLabel(Microsoft.AspNetCore.Http.IHttpContextAccessor,ToDoApp.Business.LabelRequestDto)">
            <summary>
            Add label
            </summary>
            <param name="contextAccessor"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Mutation.DeleteLabel(Microsoft.AspNetCore.Http.IHttpContextAccessor,System.Int64)">
            <summary>
            Delete Label
            </summary>
            <param name="contextAccessor"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Mutation.AddList(Microsoft.AspNetCore.Http.IHttpContextAccessor,ToDoApp.Business.ToDoListRequestDto)">
            <summary>
            Add list
            </summary>
            <param name="contextAccessor"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Mutation.UpdateList(Microsoft.AspNetCore.Http.IHttpContextAccessor,ToDoApp.Business.UpdateToDoListRequestDto)">
            <summary>
            Update todolist
            </summary>
            <param name="contextAccessor"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Mutation.DeleteList(Microsoft.AspNetCore.Http.IHttpContextAccessor,System.Int32)">
            <summary>
            Delete todolist
            </summary>
            <param name="contextAccessor"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Mutation.AddItem(Microsoft.AspNetCore.Http.IHttpContextAccessor,ToDoApp.Business.ToDoItemRequestDto)">
            <summary>
            Add todoitem
            </summary>
            <param name="contextAccessor"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Mutation.UpdateItem(Microsoft.AspNetCore.Http.IHttpContextAccessor,ToDoApp.Business.UpdateToDoItemRequestDto)">
            <summary>
            Update todoItem
            </summary>
            <param name="contextAccessor"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Mutation.Delete(Microsoft.AspNetCore.Http.IHttpContextAccessor,System.Int32)">
            <summary>
            Delete todoitem
            </summary>
            <param name="contextAccessor"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ToDoApp.Api.Query.#ctor(ToDoApp.Business.ILableAppService,ToDoApp.Business.IToDoItemAppService,ToDoApp.Business.IToDoListAppService)">
            <summary>
            Create new instance of <see cref="T:ToDoApp.Api.Query"/> class
            </summary>
            <param name="lableAppService"> Label Service</param>
            <param name="toDoItemAppService"> ToDoItem Service</param>
            <param name="toDoListAppService">List service</param>
            <param name="mapper">Auto mapper</param>
        </member>
        <member name="M:ToDoApp.Api.Query.Labels(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Get labels.
            </summary>
            <param name="contextAccessor">HttpContext accessor.</param>
            <returns>Returns labels.</returns>
        </member>
        <member name="M:ToDoApp.Api.Query.Items(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Get todoitems.
            </summary>
            <param name="contextAccessor">HttpContext accessor.</param>
            <returns>Returns todoitems.</returns>
        </member>
        <member name="M:ToDoApp.Api.Query.Lists(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Get todolists.
            </summary>
            <param name="contextAccessor">HttpContext accessor.</param>
            <returns>Returns todolists.</returns>
        </member>
    </members>
</doc>
